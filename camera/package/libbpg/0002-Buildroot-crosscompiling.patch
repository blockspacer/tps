From d1a846084080975923f2524e5eb4cbe975827ad8 Mon Sep 17 00:00:00 2001
From: Atanas Palavrov <palavrov@gmail.com>
Date: Fri, 27 Oct 2017 02:21:42 +0300
Subject: [PATCH 2/2] Buildroot crosscompiling

---
 Makefile                   | 33 +++++++++++++++++++--------------
 jctvc/TLibCommon/TypeDef.h |  4 ----
 2 files changed, 19 insertions(+), 18 deletions(-)

diff --git a/Makefile b/Makefile
index 3a8db4c..b68dcde 100644
--- a/Makefile
+++ b/Makefile
@@ -5,11 +5,11 @@
 # Enable compilation of Javascript decoder with Emscripten
 #USE_EMCC=y
 # Enable x265 for the encoder
-USE_X265=y
+#USE_X265=y
 # Enable the JCTVC code (best quality but slow) for the encoder
 #USE_JCTVC=y
 # Compile bpgview (SDL and SDL_image libraries needed)
-USE_BPGVIEW=y
+#USE_BPGVIEW=y
 # Enable it to use bit depths > 12 (need more tests to validate encoder)
 #USE_JCTVC_HIGH_BIT_DEPTH=y
 # Enable the cross compilation for Windows
@@ -17,19 +17,19 @@ USE_BPGVIEW=y
 # Enable for compilation on MacOS X
 #CONFIG_APPLE=y
 # Installation prefix
-prefix=/usr/local
+#prefix=/usr/local
 
 
 #################################
 
-ifdef CONFIG_WIN32
-CROSS_PREFIX:=x86_64-w64-mingw32-
+#ifdef CONFIG_WIN32
+#CROSS_PREFIX:=x86_64-w64-mingw32-
 #CROSS_PREFIX=i686-w64-mingw32-
-EXE:=.exe
-else
-CROSS_PREFIX:=
+#EXE:=.exe
+#else
+#CROSS_PREFIX:=$(CROSS)
 EXE:=
-endif
+#endif
 
 CC=$(CROSS_PREFIX)gcc
 CXX=$(CROSS_PREFIX)g++
@@ -38,7 +38,8 @@ EMCC=emcc
 
 PWD:=$(shell pwd)
 
-CFLAGS:=-Os -Wall -MMD -fno-asynchronous-unwind-tables -fdata-sections -ffunction-sections -fno-math-errno -fno-signed-zeros -fno-tree-vectorize -fomit-frame-pointer
+CFLAGS=$(TARGET_CFLAGS)
+CFLAGS+=-Os -Wall -MMD -fno-asynchronous-unwind-tables -fdata-sections -ffunction-sections -fno-math-errno -fno-signed-zeros -fno-tree-vectorize -fomit-frame-pointer
 CFLAGS+=-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_REENTRANT
 CFLAGS+=-I.
 CFLAGS+=-DCONFIG_BPG_VERSION=\"$(shell cat VERSION)\"
@@ -54,7 +55,8 @@ EMLDFLAGS+=-s NO_FILESYSTEM=1 -s NO_BROWSER=1
 EMLDFLAGS+=-O3 --memory-init-file 0 --closure 0 --pre-js pre.js --post-js post.js
 EMCFLAGS:=$(CFLAGS)
 
-LDFLAGS=-g
+LDFLAGS=$(TARGET_LDFLAGS)
+LDFLAGS+=-g
 ifdef CONFIG_APPLE
 LDFLAGS+=-Wl,-dead_strip
 else
@@ -112,11 +114,14 @@ else
 CMAKE_OPTS:=
 endif
 
+CMAKE=$(HOST_CMAKE)
+CMAKE_OPTS=$(TARGET_CMAKE_OPTS)
+
 x265.out:
 	mkdir -p x265.out/8bit x265.out/10bit x265.out/12bit
-	cd x265.out/12bit && cmake ../../x265/source $(CMAKE_OPTS) -DHIGH_BIT_DEPTH=ON -DEXPORT_C_API=OFF -DENABLE_SHARED=OFF -DENABLE_CLI=OFF -DMAIN12=ON
-	cd x265.out/10bit && cmake ../../x265/source $(CMAKE_OPTS) -DHIGH_BIT_DEPTH=ON -DEXPORT_C_API=OFF -DENABLE_SHARED=OFF -DENABLE_CLI=OFF -DMAIN10=ON
-	cd x265.out/8bit && cmake ../../x265/source $(CMAKE_OPTS) -DLINKED_10BIT=ON -DLINKED_12BIT=ON -DENABLE_SHARED=OFF -DENABLE_CLI=OFF
+	cd x265.out/12bit && $(CMAKE) ../../x265/source $(CMAKE_OPTS) -DHIGH_BIT_DEPTH=ON -DEXPORT_C_API=OFF -DENABLE_SHARED=OFF -DENABLE_CLI=OFF -DMAIN12=ON
+	cd x265.out/10bit && $(CMAKE) ../../x265/source $(CMAKE_OPTS) -DHIGH_BIT_DEPTH=ON -DEXPORT_C_API=OFF -DENABLE_SHARED=OFF -DENABLE_CLI=OFF -DMAIN10=ON
+	cd x265.out/8bit && $(CMAKE) ../../x265/source $(CMAKE_OPTS) -DLINKED_10BIT=ON -DLINKED_12BIT=ON -DENABLE_SHARED=OFF -DENABLE_CLI=OFF
 
 # use this target to manually rebuild x265
 x265_make: | x265.out
diff --git a/jctvc/TLibCommon/TypeDef.h b/jctvc/TLibCommon/TypeDef.h
index 7d334c7..af1e4d4 100644
--- a/jctvc/TLibCommon/TypeDef.h
+++ b/jctvc/TLibCommon/TypeDef.h
@@ -285,11 +285,7 @@
 typedef       void                Void;
 typedef       bool                Bool;
 
-#ifdef __arm__
-typedef       signed char         Char;
-#else
 typedef       char                Char;
-#endif
 typedef       unsigned char       UChar;
 typedef       short               Short;
 typedef       unsigned short      UShort;
-- 
2.7.4

